name: Deploy React App to Hosting Server

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies and build
      env:
        NODE_OPTIONS: --openssl-legacy-provider
      run: |
        npm install
        npm run build

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io

    - name: Build Docker image
      run: docker build -t react-app .

    - name: Save Docker image
      run: docker save react-app > react-app.tar

    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass

    - name: Upload Docker image to hosting server
      env:
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
      run: sshpass -p "$REMOTE_PASSWORD" scp react-app.tar $REMOTE_USER@$REMOTE_HOST:/home/$REMOTE_USER/react-app.tar

    - name: Deploy Docker container
      env:
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
        PORT: ${{ secrets.APP_PORT }}
      run: |
        sshpass -p "$REMOTE_PASSWORD" ssh $REMOTE_USER@$REMOTE_HOST << EOF
        docker load < /home/$REMOTE_USER/react-app.tar
        docker stop react-app || true
        docker rm react-app || true
        docker run -d --name react-app -p $PORT:80 react-app
        rm /home/$REMOTE_USER/react-app.tar
        docker image prune -f
        EOF

    - name: Verify deployment
      env:
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
      run: |
        sshpass -p "$REMOTE_PASSWORD" ssh $REMOTE_USER@$REMOTE_HOST "docker ps | grep react-app"
